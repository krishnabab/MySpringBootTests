package com.krish.metrics.interceptor;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import com.krish.quantum.monitoring.Message;
import com.krish.quantum.monitoring.QuantumData;

import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Component
@Slf4j
//@AllArgsConstructor
public class MetricsHandler implements HandlerInterceptor {
	//Using this static variable for using below, is this fine ???
	static long receivedTimestamp; 
	static long finishedCreatedTimestamp;
	
	@Autowired
	QuantumClient quantumClient;

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		receivedTimestamp = System.currentTimeMillis();
		/*log.info(">>>Pre Handle method is Calling");
		log.info("Request URL::" + request.getRequestURL().toString() + ":: Start Time=" + System.currentTimeMillis());
		request.setAttribute("receivedTimestamp", receivedTimestamp);
		QuantumData quantumData = new QuantumData();
		quantumData.setReceivedTimestamp(receivedTimestamp);
		log.info("quantumData" + quantumData.toString());
		if (quantumClient != null)
			log.info("quantum client " + quantumClient);
		*/
		return true;
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {

		//log.info(">>>>Post Handle method is Calling");
		finishedCreatedTimestamp = System.currentTimeMillis();
		//long receivedTimestamp = (Long) request.getAttribute("receivedTimestamp");
		//log.info("Request URL::" + request.getRequestURL().toString() + ":: End Time=" + System.currentTimeMillis());
		//request.setAttribute("finishedCreatedTimestamp", finishedCreatedTimestamp);
		//request.setAttribute("processingTime", finishedCreatedTimestamp - receivedTimestamp);
		//Using POJO from autogenerated code i am manually setting like below . is this fine ???
		QuantumData quantumData = new QuantumData();
		quantumData.setReceivedTimestamp(receivedTimestamp);
		quantumData.setFinishedCreatedTimestamp(finishedCreatedTimestamp);
		Message msg = new Message();
		msg.setName("qube1");
		msg.setTimestamp((int)(finishedCreatedTimestamp));
		quantumData.setMessage(msg);
		log.info("JSON .......>>>>"+quantumData.toString());
		//To capture response code from feign client i used below is this fine ??? 
		ResponseEntity resp = quantumClient.postAddEquipementMetricsToQuantum("collector.pi-charter.net", "okhttp/4.4.1", "isMobile:true","isAjax:true", quantumData);
		log.info("RESP Code:>>>>"+resp.getStatusCodeValue());
	}

	@Override
	public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,
			Exception exception) throws Exception {

		log.info(">>>>Request and Response is completed");
	}
}